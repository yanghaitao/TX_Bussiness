using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace Yannis.DAO
{
    /// <summary>
    /// Controller class for users
    /// </summary>
    [System.ComponentModel.DataObject]
    public partial class UserController
    {
        // Preload our schema..
        User thisSchemaLoad = new User();
        private string userName = String.Empty;
        protected string UserName
        {
            get
            {
				if (userName.Length == 0) 
				{
    				if (System.Web.HttpContext.Current != null)
    				{
						userName=System.Web.HttpContext.Current.User.Identity.Name;
					}
					else
					{
						userName=System.Threading.Thread.CurrentPrincipal.Identity.Name;
					}
				}
				return userName;
            }
        }
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public UserCollection FetchAll()
        {
            UserCollection coll = new UserCollection();
            Query qry = new Query(User.Schema);
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public UserCollection FetchByID(object Id)
        {
            UserCollection coll = new UserCollection().Where("id", Id).Load();
            return coll;
        }
		
		[DataObjectMethod(DataObjectMethodType.Select, false)]
        public UserCollection FetchByQuery(Query qry)
        {
            UserCollection coll = new UserCollection();
            coll.LoadAndCloseReader(qry.ExecuteReader()); 
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(object Id)
        {
            return (User.Delete(Id) == 1);
        }
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool Destroy(object Id)
        {
            return (User.Destroy(Id) == 1);
        }
        
        
    	
	    /// <summary>
	    /// Inserts a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
	    public void Insert(int? Userid,string Username,string Usermobile,string Usertel,string Useremail,string Loginname,string Password,string Userphoto,string Usersex,int? Roleid,int? Loginstate,int? Accountdtate,DateTime? Lastlogintime,string Lastloginip,DateTime? Adddate,int Usertype,string Collectorareacode,string Location,int? Departcode,string Communitycode,string Streetcode,int? Collectorgpsstate,DateTime? Localtionupdate,bool Isdel,bool Isleader)
	    {
		    User item = new User();
		    
            item.Userid = Userid;
            
            item.Username = Username;
            
            item.Usermobile = Usermobile;
            
            item.Usertel = Usertel;
            
            item.Useremail = Useremail;
            
            item.Loginname = Loginname;
            
            item.Password = Password;
            
            item.Userphoto = Userphoto;
            
            item.Usersex = Usersex;
            
            item.Roleid = Roleid;
            
            item.Loginstate = Loginstate;
            
            item.Accountdtate = Accountdtate;
            
            item.Lastlogintime = Lastlogintime;
            
            item.Lastloginip = Lastloginip;
            
            item.Adddate = Adddate;
            
            item.Usertype = Usertype;
            
            item.Collectorareacode = Collectorareacode;
            
            item.Location = Location;
            
            item.Departcode = Departcode;
            
            item.Communitycode = Communitycode;
            
            item.Streetcode = Streetcode;
            
            item.Collectorgpsstate = Collectorgpsstate;
            
            item.Localtionupdate = Localtionupdate;
            
            item.Isdel = Isdel;
            
            item.Isleader = Isleader;
            
	    
		    item.Save(UserName);
	    }
    	
	    /// <summary>
	    /// Updates a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
	    public void Update(int Id,int? Userid,string Username,string Usermobile,string Usertel,string Useremail,string Loginname,string Password,string Userphoto,string Usersex,int? Roleid,int? Loginstate,int? Accountdtate,DateTime? Lastlogintime,string Lastloginip,DateTime? Adddate,int Usertype,string Collectorareacode,string Location,int? Departcode,string Communitycode,string Streetcode,int? Collectorgpsstate,DateTime? Localtionupdate,bool Isdel,bool Isleader)
	    {
		    User item = new User();
	        item.MarkOld();
	        item.IsLoaded = true;
		    
			item.Id = Id;
				
			item.Userid = Userid;
				
			item.Username = Username;
				
			item.Usermobile = Usermobile;
				
			item.Usertel = Usertel;
				
			item.Useremail = Useremail;
				
			item.Loginname = Loginname;
				
			item.Password = Password;
				
			item.Userphoto = Userphoto;
				
			item.Usersex = Usersex;
				
			item.Roleid = Roleid;
				
			item.Loginstate = Loginstate;
				
			item.Accountdtate = Accountdtate;
				
			item.Lastlogintime = Lastlogintime;
				
			item.Lastloginip = Lastloginip;
				
			item.Adddate = Adddate;
				
			item.Usertype = Usertype;
				
			item.Collectorareacode = Collectorareacode;
				
			item.Location = Location;
				
			item.Departcode = Departcode;
				
			item.Communitycode = Communitycode;
				
			item.Streetcode = Streetcode;
				
			item.Collectorgpsstate = Collectorgpsstate;
				
			item.Localtionupdate = Localtionupdate;
				
			item.Isdel = Isdel;
				
			item.Isleader = Isleader;
				
	        item.Save(UserName);
	    }
    }
}
