using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace Yannis.DAO
{
    /// <summary>
    /// Controller class for project
    /// </summary>
    [System.ComponentModel.DataObject]
    public partial class ProjectController
    {
        // Preload our schema..
        Project thisSchemaLoad = new Project();
        private string userName = String.Empty;
        protected string UserName
        {
            get
            {
				if (userName.Length == 0) 
				{
    				if (System.Web.HttpContext.Current != null)
    				{
						userName=System.Web.HttpContext.Current.User.Identity.Name;
					}
					else
					{
						userName=System.Threading.Thread.CurrentPrincipal.Identity.Name;
					}
				}
				return userName;
            }
        }
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public ProjectCollection FetchAll()
        {
            ProjectCollection coll = new ProjectCollection();
            Query qry = new Query(Project.Schema);
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public ProjectCollection FetchByID(object Projcode)
        {
            ProjectCollection coll = new ProjectCollection().Where("projcode", Projcode).Load();
            return coll;
        }
		
		[DataObjectMethod(DataObjectMethodType.Select, false)]
        public ProjectCollection FetchByQuery(Query qry)
        {
            ProjectCollection coll = new ProjectCollection();
            coll.LoadAndCloseReader(qry.ExecuteReader()); 
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(object Projcode)
        {
            return (Project.Delete(Projcode) == 1);
        }
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool Destroy(object Projcode)
        {
            return (Project.Destroy(Projcode) == 1);
        }
        
        
    	
	    /// <summary>
	    /// Inserts a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
	    public void Insert(string Areacode,string Streetcode,string Communitycode,int? ProjectType,string ProjectImgurl,int? Nodeid,int? Dispatcherid,string Dispatchername,int? Handlerid,int? Projectstate,string Describe,int? Bigclassid,int? Smallclassid,string Bigclassname,string Smallclassname,string Handlername,DateTime? Adddate,string Loacation,DateTime? Startdate,string Projectname,string Details,string Departcode,int? Reportpersonid,string Reportpersonname,string Leadmessage,string Message,string Handlermessge,bool? Isdel,string Address,int? Baseclassid,string Baseclassname)
	    {
		    Project item = new Project();
		    
            item.Areacode = Areacode;
            
            item.Streetcode = Streetcode;
            
            item.Communitycode = Communitycode;
            
            item.ProjectType = ProjectType;
            
            item.ProjectImgurl = ProjectImgurl;
            
            item.Nodeid = Nodeid;
            
            item.Dispatcherid = Dispatcherid;
            
            item.Dispatchername = Dispatchername;
            
            item.Handlerid = Handlerid;
            
            item.Projectstate = Projectstate;
            
            item.Describe = Describe;
            
            item.Bigclassid = Bigclassid;
            
            item.Smallclassid = Smallclassid;
            
            item.Bigclassname = Bigclassname;
            
            item.Smallclassname = Smallclassname;
            
            item.Handlername = Handlername;
            
            item.Adddate = Adddate;
            
            item.Loacation = Loacation;
            
            item.Startdate = Startdate;
            
            item.Projectname = Projectname;
            
            item.Details = Details;
            
            item.Departcode = Departcode;
            
            item.Reportpersonid = Reportpersonid;
            
            item.Reportpersonname = Reportpersonname;
            
            item.Leadmessage = Leadmessage;
            
            item.Message = Message;
            
            item.Handlermessge = Handlermessge;
            
            item.Isdel = Isdel;
            
            item.Address = Address;
            
            item.Baseclassid = Baseclassid;
            
            item.Baseclassname = Baseclassname;
            
	    
		    item.Save(UserName);
	    }
    	
	    /// <summary>
	    /// Updates a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
	    public void Update(int Projcode,string Areacode,string Streetcode,string Communitycode,int? ProjectType,string ProjectImgurl,int? Nodeid,int? Dispatcherid,string Dispatchername,int? Handlerid,int? Projectstate,string Describe,int? Bigclassid,int? Smallclassid,string Bigclassname,string Smallclassname,string Handlername,DateTime? Adddate,string Loacation,DateTime? Startdate,string Projectname,string Details,string Departcode,int? Reportpersonid,string Reportpersonname,string Leadmessage,string Message,string Handlermessge,bool? Isdel,string Address,int? Baseclassid,string Baseclassname)
	    {
		    Project item = new Project();
	        item.MarkOld();
	        item.IsLoaded = true;
		    
			item.Projcode = Projcode;
				
			item.Areacode = Areacode;
				
			item.Streetcode = Streetcode;
				
			item.Communitycode = Communitycode;
				
			item.ProjectType = ProjectType;
				
			item.ProjectImgurl = ProjectImgurl;
				
			item.Nodeid = Nodeid;
				
			item.Dispatcherid = Dispatcherid;
				
			item.Dispatchername = Dispatchername;
				
			item.Handlerid = Handlerid;
				
			item.Projectstate = Projectstate;
				
			item.Describe = Describe;
				
			item.Bigclassid = Bigclassid;
				
			item.Smallclassid = Smallclassid;
				
			item.Bigclassname = Bigclassname;
				
			item.Smallclassname = Smallclassname;
				
			item.Handlername = Handlername;
				
			item.Adddate = Adddate;
				
			item.Loacation = Loacation;
				
			item.Startdate = Startdate;
				
			item.Projectname = Projectname;
				
			item.Details = Details;
				
			item.Departcode = Departcode;
				
			item.Reportpersonid = Reportpersonid;
				
			item.Reportpersonname = Reportpersonname;
				
			item.Leadmessage = Leadmessage;
				
			item.Message = Message;
				
			item.Handlermessge = Handlermessge;
				
			item.Isdel = Isdel;
				
			item.Address = Address;
				
			item.Baseclassid = Baseclassid;
				
			item.Baseclassname = Baseclassname;
				
	        item.Save(UserName);
	    }
    }
}
